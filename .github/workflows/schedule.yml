name: ETF Strategy Scheduler

on:
  schedule:
    # 每个交易日 9:35 推送新股信息和新上市交易股票信息 (北京时间)
    - cron: '35 1 * * 1-5'  # UTC 1:35 = 北京时间 9:35
    
    # 每个交易日 13:40 推送策略信号
    - cron: '40 5 * * 1-5'  # UTC 5:40 = 北京时间 13:40
    
    # 每周五 16:00 更新股票池
    - cron: '0 8 * * 5'  # UTC 8:00 = 北京时间 16:00
    
    # 每个交易日 15:30 爬取日线数据
    - cron: '30 7 * * 1-5'  # UTC 7:30 = 北京时间 15:30
    
    # 盘中数据爬取
    - cron: '35 1,2,3,5,6 * * 1-5'  # UTC 时间 = 北京时间 - 8
    
    # 每天 00:00 清理旧数据
    - cron: '0 16 * * *'  # UTC 16:00 = 北京时间 00:00
  
  # 允许手动触发
  workflow_dispatch:
    inputs:
      task:
        description: '选择要执行的任务'
        required: true
        default: 'run_new_stock_info'
        type: choice
        options:
          - 'test_message'
          - 'test_new_stock'
          - 'test_stock_pool'
          - 'test_execute'
          - 'test_reset'
          - 'run_new_stock_info'
          - 'push_strategy'
          - 'update_stock_pool'
          - 'crawl_daily'
          - 'crawl_intraday'
          - 'cleanup'

jobs:
  run-new-stock-info:
    if: ${{ github.event.schedule == '35 1 * * 1-5' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'run_new_stock_info') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'run_new_stock_info'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动更新新股信息数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "New stock info execution completed successfully!"

  push-strategy:
    if: ${{ github.event.schedule == '40 5 * * 1-5' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'push_strategy') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'push_strategy'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动更新策略数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Strategy push execution completed successfully!"

  update-stock-pool:
    if: ${{ github.event.schedule == '0 8 * * 5' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'update_stock_pool') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'update_stock_pool'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动更新股票池数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Stock pool update execution completed successfully!"

  crawl-daily:
    if: ${{ github.event.schedule == '30 7 * * 1-5' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'crawl_daily') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'crawl_daily'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动爬取日线数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Daily crawl execution completed successfully!"

  crawl-intraday:
    if: ${{ github.event.schedule == '35 1,2,3,5,6 * * 1-5' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'crawl_intraday') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'crawl_intraday'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动爬取盘中数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Intraday crawl execution completed successfully!"

  cleanup:
    if: ${{ github.event.schedule == '0 16 * * *' || (github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'cleanup') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt 未找到，安装默认依赖"
            pip install pandas numpy requests akshare baostock beautifulsoup4 python-dotenv tushare pytz flask
          fi

      - name: Run strategy
        env:
          TASK: 'cleanup'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          TRI_HTM_TOKEN: ${{ secrets.TRI_HTM_TOKEN }}
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          MESSAGE_FOOTER: ${{ secrets.MESSAGE_FOOTER }}
        run: |
          # 执行主程序
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "自动清理旧数据 $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Cleanup execution completed successfully!"
