name: ETF Strategy Scheduler

on:
  schedule:
    # 每个交易日 9:31 爬取当天新股申购、新上市股票信息 (北京时间 UTC+8)
    - cron: '31 1 * * 1-5' # UTC 1:31 = 北京时间 9:31
    
    # 每个交易日 9:45 推送新股申购和新上市股票信息 (北京时间 UTC+8)
    - cron: '45 1 * * 1-5' # UTC 1:45 = 北京时间 9:45
    
    # 每个交易日 9:55 爬取当天ETF交易数据 (北京时间 UTC+8)
    - cron: '55 1 * * 1-5' # UTC 1:55 = 北京时间 9:55
    
    # 每个交易日 13:00 套利扫描、股票池策略计算与推送 (北京时间 UTC+8)
    - cron: '0 5 * * 1-5' # UTC 5:00 = 北京时间 13:00
    
    # 每个交易日 16:00 爬取日线数据 (北京时间 UTC+8)
    - cron: '0 8 * * 1-5' # UTC 8:00 = 北京时间 16:00
    
    # 每天 00:00 清理旧数据 (北京时间 UTC+8)
    - cron: '0 16 * * *' # UTC 16:00 = 北京时间 00:00
    
    # 断点续爬任务（每2小时执行一次）
    - cron: '0 */2 * * *' # 每2小时执行一次

  # 允许手动触发
  workflow_dispatch:
    inputs:
      task:
        description: '选择要执行的任务'
        required: true
        type: choice
        options:
          - 'test_message'      				#【T01】手动推送微信消息
          - 'test_new_stock'    			#【T07】手动推送新股信息
          - 'test_new_stock_listings'		#【T08】手动推送新上市交易股票信息
          - 'test_stock_pool'    			#【T04】手动推送当前股票池
          - 'test_execute'				#【T05】手动执行策略并推送结果
          - 'test_reset'					#【T06】手动重置所有仓位（测试用）
          - 'test_arbitrage'				#【T09】手动套利扫描
          - 'crawl_new_stock'			#【T10】手动爬取新股申购和新上市股票信息
          - 'crawl_intraday'				#【T11】手动爬取当天ETF交易数据
          - 'push_new_stock'				#【T12】手动推送新股申购和新上市股票信息
          - 'arbitrage-scan'				#【T13】手动套利扫描
          - 'push_strategy'				#【T14】手动推送策略信号
          - 'crawl_daily'				#【T15】手动爬取日线数据
          - 'cleanup'					#【T16】手动清理旧数据
          - 'resume_crawl'				#【T17】手动断点续爬
          - 'test_crawl_small_pool'		#【T18】手动测试爬取小股票池日线数据（仅2只ETF）
  

jobs:
  # 新增：测试任务 - 爬取小股票池日线数据（仅2只ETF）
  test_crawl_small_pool:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.task == 'test_crawl_small_pool' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Input task: ${{ github.event.inputs.task }}"
          echo "Small pool file: $SMALL_POOL_FILE"
      
      - name: Run strategy
        env:
          TASK: 'test_crawl_small_pool'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
          SMALL_POOL_FILE: 'data/stock_pool/karmy_etf_list.csv'
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          echo "正在测试爬取小股票池日线数据（仅2只ETF）..."
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "手动测试：爬取小股票池日线数据 $(date +'%Y-%m-%d %H:%M')" || echo "没有数据变更"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "小股票池日线数据爬取测试完成!"
          echo "现在您可以检查 data/raw/ 目录下是否成功生成了2只ETF的数据文件"
          
  # 修改后的通用测试任务处理程序（排除 test_crawl_small_pool）
  run_test_tasks:
    if: ${{ 
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.task != 'test_crawl_small_pool' 
    }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Input task: ${{ github.event.inputs.task }}"
      
      - name: Run test task
        env:
          TASK: ${{ github.event.inputs.task }}
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "手动测试任务数据 $(date +'%Y-%m-%d %H:%M')" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Test task execution completed successfully!"

  # 9:31 AM：爬取当天新股申购、新上市股票信息
  crawl_new_stock:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '31 1 * * 1-5')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event schedule: ${{ github.event.schedule }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Input task: ${{ github.event.inputs.task }}"
          echo "Is trading day: $(date '+%u')"
      
      - name: Run strategy
        env:
          TASK: 'crawl_new_stock'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：爬取新股数据 $(date +'%Y-%m-%d %H:%M')" || echo "更新失败：没有成功爬取新股数据"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "北京时间9点31分爬取新股任务完成!"

  # 9:45 AM：推送新股申购和新上市股票信息
  push_new_stock:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '45 1 * * 1-5')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event schedule: ${{ github.event.schedule }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Input task: ${{ github.event.inputs.task }}"
      
      - name: Run strategy
        env:
          TASK: 'push_new_stock'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：推送新股信息 $(date +'%Y-%m-%d %H:%M')" || echo "更新失败：没有新股信息"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "北京时间9点45分推送新股信息到微信任务完成!"

  # 9:55 AM：爬取当天ETF交易数据
  crawl_intraday:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '55 1 * * 1-5')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Current UTC hour: $(date -u '+%H')"
          echo "Event schedule: ${{ github.event.schedule }}"
      
      - name: Run strategy
        env:
          TASK: 'crawl_intraday'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：盘中爬取ETF交易数据 $(date +'%Y-%m-%d %H:%M')" || echo "更新失败：9点55爬取当天ETF交易数据失败"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Intraday crawl execution completed successfully!"

  # 13:00 PM：套利扫描、股票池策略计算与推送
  arbitrage_and_strategy:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '0 5 * * 1-5')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event schedule: ${{ github.event.schedule }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Input task: ${{ github.event.inputs.task }}"
      
      - name: Run arbitrage scan
        env:
          TASK: 'arbitrage-scan'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：扫描套利机会 $(date +'%Y-%m-%d %H:%M')" || echo "定时任务：下午1点扫描套利机会失败"
          git push origin main || echo "Failed to push changes"
      
      - name: Run strategy push
        env:
          TASK: 'push_strategy'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：ETF策略计算并推送 $(date +'%Y-%m-%d %H:%M')" || echo "定时任务：下午1点ETF策略计算并推送失败"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Arbitrage scan and strategy push execution completed successfully!"

  # 16:00 PM：爬取日线数据
  crawl_daily:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '0 8 * * 1-5')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Event schedule: ${{ github.event.schedule }}"
          echo "Is weekday? $([ $(date -u '+%u') -le 5 ] && echo 'Yes' || echo 'No')"
      
      - name: Run strategy
        env:
          TASK: 'crawl_daily'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：下午4点爬取日线数据 $(date +'%Y-%m-%d %H:%M')" || echo "定时任务：下午4点爬取日线数据失败"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Daily crawl execution completed successfully!"

  # 00:00 AM：清理旧数据
  cleanup:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '0 16 * * *')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Debug info
        run: |
          echo "Cleanup task triggered at $(date -u)"
      
      - name: Run strategy
        env:
          TASK: 'cleanup'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          # 执行主程序
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "定时任务：零晨12点自动清理旧数据 $(date +'%Y-%m-%d %H:%M')" || echo "定时任务：零晨12点自动清理旧数据失败"
          git push origin main || echo "Failed to push changes"

      - name: Verify execution
        run: |
          echo "Cleanup execution completed successfully!"

  # 断点续爬任务（每2小时执行一次，仅在非交易时间）
  resume_crawl:
    if: ${{ (github.event_name == 'schedule' && contains(github.event.schedule, '0 */2 * * *')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install akshare baostock

      - name: Check if non-trading hours
        id: check_hours
        run: |
          echo "Current UTC time: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Current UTC hour: $(date -u '+%H')"
          utc_hour=$(date -u '+%H')
          beijing_hour=$(( (10#$utc_hour + 8) % 24 ))
          echo "Current Beijing time: $(date '+%Y-%m-%d %H:%M:%S')"
          echo "Beijing hour: $beijing_hour"
          
          # 判断是否在非交易时间 (18:00-09:00)
          if (( beijing_hour >= 18 || beijing_hour < 9 )); then
            echo "non_trading_hours=true" >> $GITHUB_OUTPUT
          else
            echo "non_trading_hours=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run resume crawl (only in non-trading hours)
        if: steps.check_hours.outputs.non_trading_hours == 'true'
        env:
          TASK: 'resume_crawl'
          WECOM_WEBHOOK: ${{ secrets.WECOM_WEBHOOK }}
        run: |
          echo "当前北京时间: $(date -u -d "+8 hours" '+%Y-%m-%d %H:%M')"
          python main.py
          
          # 提交数据变更到仓库
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/
          git commit -m "每2小时续爬ETF数据 $(date +'%Y-%m-%d %H:%M')" || echo "每2小时续爬ETF数据失败"
          git push origin main || echo "Failed to push changes"
      
      - name: Skip resume crawl (during trading hours)
        if: steps.check_hours.outputs.non_trading_hours != 'true'
        run: |
          echo "当前为交易时间 (北京时间 09:00-18:00)，跳过断点续爬任务"
          echo "Beijing time: $(date '+%Y-%m-%d %H:%M:%S')"
